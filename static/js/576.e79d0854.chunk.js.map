{"version":3,"file":"static/js/576.e79d0854.chunk.js","mappings":"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","sources":["features/reactComponents/CompMultiSelect/MultiSelect/MultiSelect.tsx","features/reactComponents/CompMultiSelect/CompMultiSelect.tsx","features/reactComponents/ScalableMenu/Menu/MenuLink/MenuLink.tsx","features/reactComponents/ScalableMenu/Menu/ManuMultiLink/MenuMultiLink.tsx","features/reactComponents/ScalableMenu/Menu/menu.svg","features/reactComponents/ScalableMenu/Menu/Menu.tsx","features/reactComponents/ScalableMenu/Menu/MenuProtectedLink/MenuProtectedLink.tsx","features/reactComponents/ScalableMenu/Menu/MenuUser/user.svg","features/reactComponents/ScalableMenu/Menu/MenuUser/MenuUser.tsx","features/reactComponents/ScalableMenu/ScalableMenu.tsx","features/reactComponents/ReactComponents.tsx","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import { ChangeEvent, memo, useState } from 'react';\r\nimport './MultiSelect.style.scss';\r\n\r\nexport interface IMultiSelect {\r\n    id: number,\r\n    value: any,\r\n    toString: () => string\r\n}\r\n\r\nexport const changeTypeForMultiSelect = (data: any[], fun: (element: any) => string): IMultiSelect[] => {\r\n    const newTab: IMultiSelect[] = [];\r\n    data.forEach((el, id) => {\r\n        newTab.push({\r\n            id: id + 1,\r\n            value: el,\r\n            toString: () => {\r\n                return fun(el);\r\n            }\r\n        })\r\n    })\r\n    return newTab;\r\n}\r\n\r\nfunction MultiSelectElement(props: { all: IMultiSelect[], selected: number[], select: (toSelect: number[]) => void }) {\r\n\r\n    const { all, selected, select } = props;\r\n    const [search, setSearch] = useState(\"\");\r\n    const [showOptions, setShowOptions] = useState(false);\r\n\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setSearch(e.target.value);\r\n        setShowOptions(true);\r\n    }\r\n\r\n    const handleShowOptions = () => {\r\n        setShowOptions(prev => !prev);\r\n    }\r\n\r\n    const handleClickAddSelected = (id: number) => {\r\n        const newSelected = [...selected, id].sort();\r\n        select(newSelected);\r\n    }\r\n\r\n    const handleClickDeleteSelected = (id: number) => {\r\n        const newSelected = selected.filter(el => {\r\n            if (el === id) {\r\n                return false;\r\n            }\r\n            return true;\r\n        })\r\n        select(newSelected);\r\n    }\r\n\r\n    return (\r\n        <div className='multi-select'>\r\n            <div className='multi-select-selected'>\r\n                {\r\n                    all\r\n                        .filter((el) => {\r\n                            if (selected.includes(el.id))\r\n                                return true;\r\n                            return false;\r\n                        })\r\n                        .map(el => {\r\n                            return <span\r\n                                className='selected-element'\r\n                                key={`[selected data] = ${el.id}}`}\r\n                            >\r\n                                {el.toString()}\r\n                                <span\r\n                                    className='selected-delete-btn'\r\n                                    onClick={() => handleClickDeleteSelected(el.id)}\r\n                                >\r\n                                    X\r\n                                </span>\r\n                            </span>\r\n                        })\r\n                }\r\n            </div>\r\n            <div className='multi-select-search'>\r\n                <label htmlFor='search'></label>\r\n                <input id=\"search\" name=\"search\" value={search} placeholder='search...' onChange={handleChange} />\r\n                <span className='show' onClick={handleShowOptions}>{showOptions ? \"^\" : \"v\"}</span>\r\n            </div>\r\n            <div\r\n                className='multi-select-options'\r\n                style={{ \"padding\": showOptions ? \"5px 0\" : \"0px\" }}\r\n            >\r\n                {\r\n                    showOptions ?\r\n                        all\r\n                            .filter(el => {\r\n                                if (el.toString().toLowerCase().match(search.toLowerCase()))\r\n                                    return true;\r\n                                return false;\r\n                            })\r\n                            .filter((el) => {\r\n                                if (selected.includes(el.id))\r\n                                    return false;\r\n                                return true;\r\n                            })\r\n                            .map(el => {\r\n                                return <span\r\n                                    key={`[add data] = ${el.id}}`}\r\n                                    onClick={() => handleClickAddSelected(el.id)}\r\n                                >\r\n                                    {el.toString()}\r\n                                </span>\r\n                            })\r\n                        :\r\n                        \"\"\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nconst MultiSelect = memo(MultiSelectElement);\r\nexport default MultiSelect;","import { useState } from 'react';\r\nimport './CompMultiSelect.style.scss';\r\nimport MultiSelect, { changeTypeForMultiSelect, IMultiSelect } from './MultiSelect/MultiSelect';\r\n\r\nexport default function CompMultiSelect() {\r\n\r\n    const [allData] = useState<IMultiSelect[]>([\r\n        {\r\n            id: 1,\r\n            value: \"Aldona\",\r\n            toString: () => { return \"Aldona\"; }\r\n        },\r\n        {\r\n            id: 2,\r\n            value: \"Jagoda\",\r\n            toString: () => { return \"Jagoda\"; }\r\n        },\r\n        {\r\n            id: 3,\r\n            value: \"Michael\",\r\n            toString: () => { return \"Michael\"; }\r\n        },\r\n        {\r\n            id: 4,\r\n            value: \"Michał\",\r\n            toString: () => { return \"Michał\"; }\r\n        }\r\n    ]);\r\n    const [selectedData, setSelectedData] = useState<number[]>([]);\r\n\r\n    const [allDataFun] = useState<{ city: string, street: string }[]>([\r\n        {\r\n            city: \"Warsaw\",\r\n            street: \"Góralska\"\r\n        },\r\n        {\r\n            city: \"Łódź\",\r\n            street: \"Fabryczna\"\r\n        },\r\n        {\r\n            city: \"Gdańsk\",\r\n            street: \"Długa\"\r\n        },\r\n        {\r\n            city: \"Kraków\",\r\n            street: \"Kolejowa\"\r\n        },\r\n    ]);\r\n    const [selectedDataFun, setSelectedDataFun] = useState<number[]>([]);\r\n\r\n    const handleSelect = (toSelect: number[]) => {\r\n        setSelectedData(toSelect);\r\n    }\r\n\r\n    const handleSelectFun = (toSelect: number[]) => {\r\n        setSelectedDataFun(toSelect);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <p className='comp-p'>Multi select without mapping fun</p>\r\n            <div className='comp-multi-select'>\r\n                <span>Selected in parent by id:</span>\r\n                <div>[{\r\n                    selectedData.map(data => {\r\n                        return <span key={`[selected] = ${data}`}>{data}, </span>\r\n                    })\r\n                }]</div>\r\n                <span className='grid-top'>Pls select:</span>\r\n                <MultiSelect all={allData} selected={selectedData} select={handleSelect} />\r\n            </div>\r\n\r\n            <p className='comp-p'>Multi select with mapping fun</p>\r\n            <div className='comp-multi-select'>\r\n                <span>Selected in parent by id:</span>\r\n                <div>[{\r\n                    selectedDataFun.map(data => {\r\n                        return <span key={`[selected] = ${data}`}>{data}, </span>\r\n                    })\r\n                }]</div>\r\n                <span className='grid-top'>Pls select:</span>\r\n                <MultiSelect\r\n                    all={changeTypeForMultiSelect(allDataFun, (el) => `[${el.city}] ${el.street}`)}\r\n                    selected={selectedDataFun}\r\n                    select={handleSelectFun}\r\n                />\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import { NavLink } from 'react-router-dom';\r\nimport './MenuLink.style.scss';\r\n\r\nexport default function MenuLink(props: { path: string, name: string }) {\r\n    const { path, name } = props;\r\n\r\n    return (\r\n        <NavLink className=\"menu-link\" to={path}>{name}</NavLink>\r\n    )\r\n}\r\n","import { useState } from 'react';\r\nimport MenuLink from '../MenuLink/MenuLink';\r\nimport './MenuMultiLink.style.scss';\r\n\r\nexport default function MenuMultiLink(props: { mainName: string, elements: { path: string, name: string }[] }) {\r\n\r\n  const { mainName, elements } = props;\r\n  const [showElements, setShowElements] = useState(false);\r\n\r\n  const handleMouseEnter = () => {\r\n    setShowElements(true);\r\n  }\r\n\r\n  const handleMouseLeave = () => {\r\n    setShowElements(false);\r\n  }\r\n\r\n  return (\r\n    <div className='menu-multi-link' onMouseEnter={handleMouseEnter} >\r\n      <div className={`main-name ${showElements ? 'active' : ''}`}>{mainName}</div>\r\n      {\r\n        showElements ?\r\n          <div className='elements-list' onMouseLeave={handleMouseLeave}>\r\n            {\r\n              elements.map((el, id) => {\r\n                return <MenuLink key={`[Link List ${mainName}] = ${id}`} path={el.path} name={el.name} />\r\n              })\r\n            }\r\n          </div>\r\n          :\r\n          null\r\n      }\r\n    </div>\r\n  )\r\n}\r\n","var _g, _g2, _g3, _g4, _g5, _g6, _g7, _g8, _g9, _g10, _g11, _g12, _g13, _g14, _g15, _g16;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgMenu(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 377 377\",\n    style: {\n      enableBackground: \"new 0 0 377 377\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"rect\", {\n    x: 75,\n    y: 73.5,\n    width: 302,\n    height: 30\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    y: 73.5,\n    width: 30,\n    height: 30\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    y: 273.5,\n    width: 30,\n    height: 30\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 75,\n    y: 273.5,\n    width: 302,\n    height: 30\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    y: 173.5,\n    width: 30,\n    height: 30\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 75,\n    y: 173.5,\n    width: 302,\n    height: 30\n  }))), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", null)), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", null)), _g4 || (_g4 = /*#__PURE__*/React.createElement(\"g\", null)), _g5 || (_g5 = /*#__PURE__*/React.createElement(\"g\", null)), _g6 || (_g6 = /*#__PURE__*/React.createElement(\"g\", null)), _g7 || (_g7 = /*#__PURE__*/React.createElement(\"g\", null)), _g8 || (_g8 = /*#__PURE__*/React.createElement(\"g\", null)), _g9 || (_g9 = /*#__PURE__*/React.createElement(\"g\", null)), _g10 || (_g10 = /*#__PURE__*/React.createElement(\"g\", null)), _g11 || (_g11 = /*#__PURE__*/React.createElement(\"g\", null)), _g12 || (_g12 = /*#__PURE__*/React.createElement(\"g\", null)), _g13 || (_g13 = /*#__PURE__*/React.createElement(\"g\", null)), _g14 || (_g14 = /*#__PURE__*/React.createElement(\"g\", null)), _g15 || (_g15 = /*#__PURE__*/React.createElement(\"g\", null)), _g16 || (_g16 = /*#__PURE__*/React.createElement(\"g\", null)));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMenu);\nexport default __webpack_public_path__ + \"static/media/menu.92aff1acd6f20f0b107429008c2650a2.svg\";\nexport { ForwardRef as ReactComponent };","import { Fragment, useState } from 'react';\r\nimport MenuSVG from './menu.svg';\r\nimport './Menu.style.scss';\r\n\r\nexport default function Menu(\r\n    props: {\r\n        user?: JSX.Element,\r\n        links: JSX.Element[],\r\n        protectedLinks?: JSX.Element[]\r\n    }\r\n) {\r\n    const [showSmBar, setShowSmBar] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <nav className='menu menu-lg'>\r\n                <div className='menu-lg-links' style={{ justifyContent: props.user ? 'flex-start' : 'center' }}>\r\n                    <MenuContent {...props} />\r\n                </div>\r\n                {\r\n                    props.user || null\r\n                }\r\n            </nav>\r\n\r\n            <nav className='menu menu-sm'>\r\n                <img src={MenuSVG} alt=\"menu\" className='action' onClick={() => setShowSmBar(prev => !prev)} />\r\n                {\r\n                    showSmBar ?\r\n                        <div className='bar-sm'>\r\n                            {\r\n                                props.user || null\r\n                            }\r\n                            <MenuContent {...props} />\r\n                        </div>\r\n                        :\r\n                        null\r\n                }\r\n\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst MenuContent = (\r\n    props: {\r\n        links: JSX.Element[],\r\n        protectedLinks?: JSX.Element[]\r\n    }\r\n) => {\r\n    return (\r\n        <>\r\n            {\r\n                props.links.map((el, id) => {\r\n                    return <Fragment key={`[menu link ] = ${id}`}>\r\n                        {el}\r\n                    </Fragment>\r\n                })\r\n            }\r\n            {\r\n                props.protectedLinks && props.protectedLinks.map((el, id) => {\r\n                    return <Fragment key={`[menu protected link ] = ${id}`}>\r\n                        {el}\r\n                    </Fragment>\r\n                })\r\n            }\r\n        </>\r\n    )\r\n}","import { useAppSelector } from '../../../../../core/hooks/store.hooks';\r\nimport { UserRoles } from '../../../../../core/utils/userRoles.enum';\r\nimport MenuLink from '../MenuLink/MenuLink';\r\n\r\nexport default function MenuProtectedLink(props: { path: string, name: string, role: UserRoles }) {\r\n\r\n    const { path, name, role } = props;\r\n    const { isLogin, userData } = useAppSelector(state => state.user);\r\n\r\n    return (\r\n        isLogin && userData.role.includes(role) ?\r\n            <MenuLink path={path} name={name} />\r\n            :\r\n            null\r\n    )\r\n}\r\n","var _defs, _circle, _circle2, _circle3;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgUser(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 600,\n    height: 600,\n    fill: \"white\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"circular-border\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 300,\n    cy: 300,\n    r: 280\n  })), /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"avoid-antialiasing-bugs\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: \"100%\",\n    height: 498\n  })))), _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 300,\n    cy: 300,\n    r: 280,\n    fill: \"black\",\n    clipPath: \"url(#avoid-antialiasing-bugs)\"\n  })), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 300,\n    cy: 230,\n    r: 115\n  })), _circle3 || (_circle3 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 300,\n    cy: 550,\n    r: 205,\n    clipPath: \"url(#circular-border)\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgUser);\nexport default __webpack_public_path__ + \"static/media/user.b7d395a8d09a5c32ae8f01b6c0a5d8fe.svg\";\nexport { ForwardRef as ReactComponent };","import { useAppSelector } from '../../../../../core/hooks/store.hooks';\r\nimport './MenuUser.style.scss';\r\nimport UserSVG from './user.svg';\r\n\r\nexport default function MenuUser(props: { pathToProfile: string }) {\r\n\r\n    const { userData } = useAppSelector(state => state.user);\r\n\r\n    return (\r\n        <div className='menu-user'>\r\n            <img src={UserSVG} alt=\"user\" />\r\n            <a href={props.pathToProfile}>{userData.firstName}{\" \"}{userData.lastName}</a>\r\n        </div>\r\n    )\r\n}\r\n","import { UserRoles } from '../../../core/utils/userRoles.enum';\r\nimport MenuMultiLink from './Menu/ManuMultiLink/MenuMultiLink';\r\nimport Menu from './Menu/Menu';\r\nimport MenuLink from './Menu/MenuLink/MenuLink';\r\nimport MenuProtectedLink from './Menu/MenuProtectedLink/MenuProtectedLink';\r\nimport MenuUser from './Menu/MenuUser/MenuUser';\r\nimport './ScalableMenu.style.scss';\r\n\r\nexport default function ScalableMenu() {\r\n    return (\r\n        <div className='scalable-menu'>\r\n            <Menu\r\n                links={[\r\n                    <MenuLink path=\"/\" name=\"link 1\" />,\r\n                    <MenuLink path=\"/\" name=\"link 2\" />,\r\n                    <MenuLink path=\"/\" name=\"link 3\" />,\r\n                    <MenuLink path=\"/\" name=\"link 4\" />,\r\n                    <MenuLink path=\"/\" name=\"link 5\" />,\r\n                    <MenuLink path=\"/\" name=\"link 6\" />,\r\n                    <MenuMultiLink\r\n                        mainName=\"multi 1\"\r\n                        elements={[\r\n                            {\r\n                                path: \"/\",\r\n                                name: \"multi link 1\"\r\n                            },\r\n                            {\r\n                                path: \"/\",\r\n                                name: \"multi link 2\"\r\n                            },\r\n                            {\r\n                                path: \"/\",\r\n                                name: \"multi link 3\"\r\n                            },\r\n                        ]}\r\n                    />\r\n                ]}\r\n            />\r\n            <Menu\r\n                user={\r\n                    <MenuUser pathToProfile=\"/profile\" />\r\n                }\r\n                links={[\r\n                    <MenuLink path=\"/\" name=\"link 11\" />,\r\n                    <MenuLink path=\"/\" name=\"link 12\" />,\r\n                    <MenuLink path=\"/\" name=\"link 13\" />,\r\n                    <MenuLink path=\"/\" name=\"link 14\" />,\r\n                    <MenuMultiLink\r\n                        mainName=\"multi 11\"\r\n                        elements={[\r\n                            {\r\n                                path: \"/\",\r\n                                name: \"multi link 11\"\r\n                            },\r\n                            {\r\n                                path: \"/\",\r\n                                name: \"multi link 12\"\r\n                            },\r\n                            {\r\n                                path: \"/\",\r\n                                name: \"multi link 13\"\r\n                            },\r\n                            {\r\n                                path: \"/\",\r\n                                name: \"multi link long 14\"\r\n                            },\r\n                        ]}\r\n                    />\r\n                ]}\r\n                protectedLinks={[\r\n                    <MenuProtectedLink path=\"/\" name=\"protected 1\" role={UserRoles.AUTH} />,\r\n                    <MenuProtectedLink path=\"/\" name=\"protected 2\" role={UserRoles.NO_AUTH} />,\r\n                ]}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import CompMultiSelect from './CompMultiSelect/CompMultiSelect';\r\nimport './ReactComponents.style.scss';\r\nimport ScalableMenu from './ScalableMenu/ScalableMenu';\r\n\r\nexport default function ReactComponents() {\r\n    return (\r\n        <div className='react-components'>\r\n            <h1>Components</h1>\r\n\r\n            <div className='minor'>\r\n                <h2>Multi select</h2>\r\n                <CompMultiSelect />\r\n            </div>\r\n\r\n            <div className='minor'>\r\n                <h2>Scalable menu</h2>\r\n                <ScalableMenu />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["changeTypeForMultiSelect","data","fun","newTab","forEach","el","id","push","value","toString","MultiSelectElement","props","all","selected","select","useState","search","setSearch","showOptions","setShowOptions","className","filter","includes","map","onClick","newSelected","handleClickDeleteSelected","htmlFor","name","placeholder","onChange","e","target","prev","style","toLowerCase","match","sort","handleClickAddSelected","memo","CompMultiSelect","allData","selectedData","setSelectedData","city","street","allDataFun","selectedDataFun","setSelectedDataFun","toSelect","MenuLink","path","to","MenuMultiLink","mainName","elements","showElements","setShowElements","onMouseEnter","onMouseLeave","Menu","showSmBar","setShowSmBar","justifyContent","user","MenuContent","src","MenuSVG","alt","links","Fragment","protectedLinks","MenuProtectedLink","role","useAppSelector","state","isLogin","userData","MenuUser","UserSVG","href","pathToProfile","firstName","lastName","ScalableMenu","UserRoles","ReactComponents","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}