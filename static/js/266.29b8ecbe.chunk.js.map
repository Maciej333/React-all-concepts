{"version":3,"file":"static/js/266.29b8ecbe.chunk.js","mappings":"+OAEe,SAASA,IACpB,OACI,+BACI,iBAAKC,UAAU,QAAf,WACI,mCACA,iBAAMC,MAAO,CAAE,OAAU,OAAQ,SAAY,UAA7C,4GCAhB,IAAMC,GAAcC,EAAAA,EAAAA,OAAK,kBAAM,gCAEhB,SAASC,IACpB,OACI,SAAC,KAAD,WACI,UAAC,KAAD,CAAOC,KAAK,GAAGC,SAAS,SAAC,KAAD,IAAxB,WACI,SAAC,KAAD,CAAOD,KAAK,IAAIC,SAAS,iDACzB,UAAC,KAAD,CAAOD,KAAK,WAAWC,SAAS,SAAC,EAAAC,SAAD,CAAUC,UAAU,sCAApB,UAAuC,SAACN,EAAD,MAAvE,WACI,SAAC,KAAD,CAAOG,KAAK,mBAAmBC,SAAS,SAAC,IAAD,OACxC,SAAC,KAAD,CAAOD,KAAK,aAAaC,SAAS,SAAC,IAAD,OAClC,SAAC,KAAD,CAAOD,KAAK,SAASC,SAAS,SAAC,IAAD,UAElC,SAAC,KAAD,CACID,KAAK,aACLC,SACI,SAACG,EAAA,EAAD,CAAgBC,SAAU,CAACC,EAAAA,EAAAA,MAA3B,UACI,SAACZ,EAAD,SAIZ,SAAC,KAAD,CAAOM,KAAK,IAAIC,SAAS,iD,cCxB1B,SAASM,IACpB,OACI,gBAAKZ,UAAU,aAAf,UACI,iBAAKA,UAAU,iBAAf,WACI,SAAC,KAAD,CAASa,GAAG,gBAAZ,oBACA,SAAC,KAAD,CAASA,GAAG,oBAAZ,iCACA,SAAC,KAAD,CAASA,GAAG,gBAAZ,wBCJD,SAASC,IACpB,OACI,iBAAKd,UAAU,eAAf,WACI,0CACA,SAACY,EAAD,KACA,SAACR,EAAD,KACA,SAAC,KAAD,S,6GCHCW,EAAS,WAElB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,MAEd,OACI,iBAAKnB,UAAU,SAAf,WACI,4BACI,SAAC,KAAD,CAAMa,GAAG,SAAT,wBACA,SAAC,KAAD,CAAMA,GAAG,WAAT,4BACA,SAAC,KAAD,CAAMA,GAAG,mBAAT,mCAGJ,yCACA,0BAAOG,EAASI,YAEhB,uCACA,iBAAKpB,UAAU,aAAf,WACI,mCACA,0BAAY,OAALkB,QAAK,IAALA,GAAAA,EAAOG,GAAKH,EAAMG,GAAK,iBAC9B,qCACA,0BAAY,OAALH,QAAK,IAALA,GAAAA,EAAOI,KAAOJ,EAAMI,KAAO,sBAEtC,SAAC,KAAD,QAKG,SAASC,IACpB,IAAML,GAAQC,EAAAA,EAAAA,MAEd,OACI,0BACI,0BAAY,OAALD,QAAK,IAALA,GAAAA,EAAOG,GAAKH,EAAMG,GAAK,gBAC7B,OACD,0BAAY,OAALH,QAAK,IAALA,GAAAA,EAAOI,KAAOJ,EAAMI,KAAO","sources":["features/reactRouter/RouterProtected/RouterProtected.tsx","features/reactRouter/routes/ReactRouterRoutes.tsx","features/reactRouter/RouterNav/RouterNav.tsx","features/reactRouter/ReactRouter.tsx","features/reactRouter/RouterBasic/Params/Params.tsx"],"sourcesContent":["import React from 'react'\r\n\r\nexport default function RouterProtected() {\r\n    return (\r\n        <>\r\n            <div className='minor'>\r\n                <h2>Paths</h2>\r\n                <span style={{ \"margin\": \"50px\", \"fontSize\": \"1.2rem\" }}>CONGRATULATION U are here, where AUTH role was required!. Try refreshing page, or logout.</span>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { lazy, Suspense } from 'react';\r\nimport { Routes, Route, Outlet } from 'react-router-dom';\r\nimport ProtectedRoute from '../../../core/routes/ProtectedRoute';\r\nimport { UserRoles } from '../../../core/utils/userRoles.enum';\r\nimport NestedParams from '../RouterBasic/Params/Params';\r\nimport RouterProtected from '../RouterProtected/RouterProtected';\r\n\r\nconst RouterBasic = lazy(() => import('../RouterBasic/RouterBasic'));\r\n\r\nexport default function ReactRouterRoutes() {\r\n    return (\r\n        <Routes>\r\n            <Route path=\"\" element={<Outlet />}>\r\n                <Route path=\"/\" element={<p>Select nested path</p>} />\r\n                <Route path=\"/basic/*\" element={<Suspense fallback={<p>Loading...</p>}><RouterBasic /></Suspense>}>\r\n                    <Route path=\"params/:id/:name\" element={<NestedParams />}></Route>\r\n                    <Route path=\"params/:id\" element={<NestedParams />}></Route>\r\n                    <Route path=\"params\" element={<NestedParams />}></Route>\r\n                </Route>\r\n                <Route\r\n                    path=\"/protected\"\r\n                    element={\r\n                        <ProtectedRoute authRole={[UserRoles.AUTH]}>\r\n                            <RouterProtected />\r\n                        </ProtectedRoute>\r\n                    }\r\n                />\r\n                <Route path=\"*\" element={<p>Path not found</p>} />\r\n            </Route>\r\n        </Routes>\r\n    )\r\n}\r\n","import './RouterNav.style.scss';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nexport default function RouterNav() {\r\n    return (\r\n        <nav className='router-nav'>\r\n            <div className='link-container'>\r\n                <NavLink to=\"/router/basic\">Basic</NavLink>\r\n                <NavLink to=\"/router/protected\">Protected [ Auth ]</NavLink>\r\n                <NavLink to=\"/router/error\">Error</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n","import './ReactRouter.style.scss';\r\nimport ReactRouterRoutes from './routes/ReactRouterRoutes';\r\nimport { Outlet } from 'react-router-dom';\r\nimport RouterNav from './RouterNav/RouterNav';\r\n\r\nexport default function ReactRouter() {\r\n    return (\r\n        <div className='react-router'>\r\n            <h1>React Router</h1>\r\n            <RouterNav />\r\n            <ReactRouterRoutes />\r\n            <Outlet />\r\n        </div>\r\n    )\r\n}\r\n","import './Params.style.scss';\r\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\r\n\r\ninterface Param {\r\n    id?: number,\r\n    name?: string\r\n}\r\n\r\nexport const Params = () => {\r\n\r\n    const location = useLocation();\r\n    const param = useParams() as Param;\r\n\r\n    return (\r\n        <div className='params'>\r\n            <nav>\r\n                <Link to=\"params\">No params</Link>\r\n                <Link to=\"params/1\">Only id param</Link>\r\n                <Link to=\"params/1/Bozenka\">Id and Name param</Link>\r\n            </nav>\r\n\r\n            <span>Pathname:</span>\r\n            <span>{location.pathname}</span>\r\n\r\n            <span>Params:</span>\r\n            <div className='div-grid-2'>\r\n                <span>Id:</span>\r\n                <span>{param?.id ? param.id : \"no id given\"}</span>\r\n                <span>Name:</span>\r\n                <span>{param?.name ? param.name : \"no name given\"}</span>\r\n            </div>\r\n            <Outlet />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default function NestedParams() {\r\n    const param = useParams() as Param;\r\n\r\n    return (\r\n        <p>\r\n            <span>{param?.id ? param.id : \"no id given\"}</span>\r\n            {\" | \"}\r\n            <span>{param?.name ? param.name : \"no name given\"}</span>\r\n        </p>\r\n    )\r\n}\r\n"],"names":["RouterProtected","className","style","RouterBasic","lazy","ReactRouterRoutes","path","element","Suspense","fallback","ProtectedRoute","authRole","UserRoles","RouterNav","to","ReactRouter","Params","location","useLocation","param","useParams","pathname","id","name","NestedParams"],"sourceRoot":""}