{"version":3,"file":"static/js/811.5d2972df.chunk.js","mappings":"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","sources":["features/reactAdvance/Context/myContext.ts","features/reactAdvance/Context/ContextChild/ContextChild.tsx","features/reactAdvance/Context/themeContext.ts","features/reactAdvance/Context/ContextTheme/ContextTheme.tsx","features/reactAdvance/Context/Context.tsx","features/reactAdvance/Reference/ReferenceForward/ReferenceForward.tsx","features/reactAdvance/Reference/Reference.tsx","features/reactBasic/Lifecycle/Destroy/Destroy.tsx","features/reactBasic/Lifecycle/Lifecycle.tsx","features/reactHooks/HookCallback/FunElement/FunElement.tsx","features/reactHooks/HookCallback/MemoElement/MemoElement.tsx","features/reactHooks/HookCallback/HookCallback.tsx","core/hooks/useCustom.ts","features/reactHooks/HookCustom/HookCustom.tsx","features/reactHooks/HookMemo/HookMemo.tsx","features/reactHooks/HookReducer/BtnAdd/BtnAdd.tsx","features/reactHooks/HookReducer/HookReducer.tsx","features/reactHooks/HookState/HookState.tsx","features/reactHooks/HookTransition/HookTransition.tsx","features/reactHooks/ReactHooks.tsx","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import { createContext } from \"react\";\r\nimport { IMyContext } from \"../../../core/models/MyContext\";\r\n\r\nconst initContext: IMyContext = {\r\n    value: \"val from context\",\r\n    setValue: () => \"\"\r\n}\r\n\r\nexport const MyContext = createContext(initContext);","import { Fragment, useContext } from \"react\"\r\nimport { MyContext } from \"../myContext\"\r\n\r\nexport default function ContextChild() {\r\n\r\n    const { value, setValue } = useContext(MyContext);\r\n\r\n    return (\r\n        <Fragment>\r\n            <span>[CHILD] stateContext = {value}</span>\r\n            <label htmlFor=\"childContext\">Change context from child component:</label>\r\n            <input id=\"childContext\" name=\"childContext\" value={value} onChange={(e) => { setValue(e.target.value) }}></input>\r\n        </Fragment>\r\n    )\r\n}\r\n","import { createContext } from \"react\";\r\n\r\nexport const LIGHT = \"light\";\r\nexport const DARK = \"dark\";\r\n\r\nexport const ThemeContext = createContext(LIGHT)","import { useContext } from 'react';\r\nimport { ThemeContext } from '../themeContext';\r\nimport './ContextTheme.style.scss';\r\n\r\nexport default function ContextTheme() {\r\n\r\n    const theme = useContext(ThemeContext);\r\n\r\n    return (\r\n        <div className={\"context-theme \"+theme}>ContextTheme</div>\r\n    )\r\n}\r\n","import { ChangeEvent, useState } from 'react';\r\nimport './Context.style.scss';\r\nimport ContextChild from './ContextChild/ContextChild';\r\nimport ContextTheme from './ContextTheme/ContextTheme';\r\nimport { MyContext } from './myContext';\r\nimport { DARK, LIGHT, ThemeContext } from './themeContext';\r\n\r\nexport default function Context() {\r\n\r\n    const [stateContext, setStateContext] = useState(\"context val from state\");\r\n    const [stateContextTheme, setStateContextTheme] = useState(LIGHT);\r\n\r\n    const handleStateContext = (val: string) => {\r\n        setStateContext(val);\r\n    }\r\n\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const { value } = e.target;\r\n        setStateContext(value);\r\n    }\r\n\r\n    return (\r\n        <div className='context'>\r\n            <MyContext.Provider value={{ value: stateContext, setValue: handleStateContext }}>\r\n                <span>[PARENT] stateContext = {stateContext}</span>\r\n                <label htmlFor='parentContext'>Change context from parent component:</label>\r\n                <input id=\"parentContext\" name=\"parentContext\" value={stateContext} onChange={handleChange}></input>\r\n\r\n                <ContextChild />\r\n            </MyContext.Provider>\r\n            <ThemeContext.Provider value={stateContextTheme}>\r\n                <p>EXAMPLE OF THEME CONTEXT</p>\r\n                <label htmlFor='themeContext'>Theme = {stateContextTheme}</label>\r\n                <div>\r\n                    <button onClick={() => setStateContextTheme(LIGHT)}>Light theme</button>\r\n                    <button onClick={() => setStateContextTheme(DARK)}>Dark theme</button>\r\n                </div>\r\n                <ContextTheme />\r\n            </ThemeContext.Provider>\r\n        </div >\r\n    )\r\n}\r\n","import './ReferenceForward.style.scss';\r\nimport React, { forwardRef, useState } from 'react';\r\n\r\nconst ReferenceForward = forwardRef<HTMLDivElement>((props, ref) => {\r\n    const [state, setState] = useState(\"no click\");\r\n\r\n    const handleClick = () => {\r\n        setState(prev => {\r\n            const returnVal = prev === \"no click\" ?\r\n                \"YES, U clicked ME!\"\r\n                :\r\n                \"no click\";\r\n            return returnVal;\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className='reference-focus' ref={ref}>\r\n            <span>Input to focus</span>\r\n            <input placeholder='Focus Me!'></input>\r\n            <span>Forward state = '{state}'</span>\r\n            <span className=\"btn-wrapper\" onClick={handleClick}>\r\n                <button onClick={() => { }} disabled>Force me to click!</button>\r\n            </span>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default ReferenceForward;","import { createRef, useRef } from 'react';\r\nimport './Reference.style.scss';\r\nimport ReferenceForward from './ReferenceForward/ReferenceForward';\r\n\r\nexport default function Reference() {\r\n\r\n    const spanRef = useRef<HTMLSpanElement>(null);\r\n    const forwardRef = createRef<HTMLDivElement>();\r\n\r\n    const handleClick = (color: string) => {\r\n        if (spanRef.current?.style)\r\n            spanRef.current.style.backgroundColor = color;\r\n    }\r\n\r\n    const handleForwardFocus = () => {\r\n        forwardRef.current?.querySelector(\"input\")?.focus();\r\n    }\r\n\r\n    const handleForwardClick = () => {\r\n        const button = forwardRef.current?.querySelector(\"button\");\r\n        if (button) {\r\n            button.disabled = false;\r\n            button.click();\r\n            button.disabled = true;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='reference'>\r\n            <p>[ useRef ] Click button to change span 'Change me' background color</p>\r\n            <span ref={spanRef}>Change me!</span>\r\n            <div className='flex'>\r\n                <button onClick={() => handleClick('red')}>Change to red</button>\r\n                <button onClick={() => handleClick('transparent')}>Change to basic</button>\r\n            </div>\r\n\r\n            <p>[ createRef ] referance forwarding </p>\r\n            <div className='flex'>\r\n                <button onClick={handleForwardFocus}>Focus input</button>\r\n                <button onClick={handleForwardClick}>Click btn</button>\r\n            </div>\r\n            <ReferenceForward ref={forwardRef} />\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect } from \"react\"\r\nimport './Destroy.style.scss';\r\n\r\nexport default function Destroy(props: { setParentState: React.Dispatch<React.SetStateAction<string>> }) {\r\n\r\n    const { setParentState } = props;\r\n\r\n    useEffect(() => {\r\n        setParentState(\"element in\");\r\n        return () => {\r\n            setParentState(\"El. Destroyed\")\r\n        }\r\n    }, [setParentState])\r\n\r\n    return (\r\n        <div className=\"destroy\">element</div>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport Destroy from \"./Destroy/Destroy\";\r\nimport './Lifecycle.style.scss';\r\n\r\nexport default function Lifecycle() {\r\n\r\n    const [initState, setInitState] = useState(\"default state\");\r\n    const [changeState, setChangeState] = useState(true);\r\n    const [changeStateNumber, setChangeStateNumber] = useState(0);\r\n    const [destroy, setDestroy] = useState(true);\r\n    const [destroyState, setDestroyState] = useState(\"element in\")\r\n\r\n    useEffect(() => {\r\n        setInitState(\"on init state\")\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setChangeStateNumber(prev => {\r\n            return prev + 1;\r\n        })\r\n    }, [changeState])\r\n\r\n    const handleChangeState = () => {\r\n        setChangeState(prev => !prev);\r\n    }\r\n\r\n    const addElement = () => {\r\n        setDestroy(true);\r\n    }\r\n\r\n    return (\r\n        <div className=\"lifecycle\">\r\n            <span>Init state = </span>\r\n            <span>{initState}</span>\r\n            <span></span>\r\n\r\n            <span>Change state = </span>\r\n            <span>{changeStateNumber}</span>\r\n            <button onClick={handleChangeState}>Change</button>\r\n\r\n            <span>Destroy state = </span>\r\n            <span>{destroyState}</span>\r\n            <div>\r\n                <button onClick={addElement}>ADD</button>\r\n                <button onClick={() => setDestroy(false)}>DELETE</button>\r\n            </div>\r\n\r\n            <div className=\"destroy-element\">\r\n                {\r\n                    destroy ?\r\n                        <Destroy setParentState={setDestroyState} />\r\n                        :\r\n                        <span>Nothing to show, click' ADD'</span>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { memo, useEffect } from 'react'\r\n\r\nexport const FunElement = memo((props: { function: () => number }) => {\r\n\r\n    useEffect(() => {\r\n        console.log(\"-- fun rerender\")\r\n    }, [props.function])\r\n\r\n    return (\r\n        <span>{props.function()}</span>\r\n    )\r\n});\r\n","import { memo, useEffect } from 'react'\r\n\r\nexport const MemoElement = memo((props: { function: () => number }) => {\r\n\r\n    useEffect(() => {\r\n        console.log(\"-- memo rerender\")\r\n    }, [props.function])\r\n\r\n    return (\r\n        <span>{props.function()}</span>\r\n    )\r\n});\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport { FunElement } from './FunElement/FunElement';\r\nimport './HookCallback.style.scss';\r\nimport { MemoElement } from './MemoElement/MemoElement';\r\n\r\nexport default function HookCallback() {\r\n\r\n    const [refresh, setRefresh] = useState(true);\r\n    const [val, setVal] = useState(5);\r\n    const [pow, setPow] = useState(2);\r\n\r\n    useEffect(() => {\r\n        console.log(\"\\n\\n==== refresh CALLBACK\");\r\n    }, [refresh])\r\n\r\n    const fun = (): number => {\r\n        return val ** pow;\r\n    }\r\n\r\n    const memoizedFun = useCallback(\r\n        fun,\r\n        [val, pow]\r\n    );\r\n\r\n    return (\r\n        <div className='hook-callback'>\r\n            <p>Open browser console</p>\r\n            <label htmlFor='val'>val = </label>\r\n            <input id=\"val\" name=\"val\" type=\"number\" value={val} onChange={(e) => setVal(Number(e.target.value))} />\r\n            <label htmlFor='pow'>pow = </label>\r\n            <input id=\"pow\" name=\"pow\" type=\"number\" value={pow} onChange={(e) => setPow(Number(e.target.value))} />\r\n\r\n            <span>FUN = </span>\r\n            <FunElement function={fun} />\r\n\r\n            <span>MEMO = </span>\r\n            <MemoElement function={memoizedFun} />\r\n\r\n            <div>\r\n                <button onClick={() => setRefresh(prev => !prev)}>Refresh component</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst useCustom = (text: string) => {\r\n    const [data, setData] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setData(\"init data, wait to process\");\r\n        const timeout = setTimeout(() => {\r\n            setData(\"Oo, new init data! \" + text);\r\n        }, 5000)\r\n\r\n        return () => {\r\n            clearTimeout(timeout);\r\n        }\r\n    }, [text])\r\n\r\n    return { data };\r\n}\r\n\r\nexport default useCustom;","import { ChangeEvent, useEffect, useState } from 'react';\r\nimport useCustom from '../../../core/hooks/useCustom';\r\nimport './HookCustom.style.scss';\r\n\r\nexport default function HookCustom() {\r\n\r\n    const [state, setState] = useState(\"Hook usage\")\r\n    const { data } = useCustom(state);\r\n\r\n    useEffect(() => {\r\n\r\n    }, [state]);\r\n\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const { value } = e.target;\r\n        setState(value);\r\n    }\r\n\r\n    return (\r\n        <div className='hook-custom'>\r\n            <label htmlFor='state'>Data to return after 5s</label>\r\n            <input id=\"state\" name=\"state\" value={state} onChange={handleChange}></input>\r\n\r\n            <span>Data from hook:</span>\r\n            <span>{data}</span>\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useMemo, useState } from 'react';\r\nimport { FunElement } from '../HookCallback/FunElement/FunElement';\r\nimport '../HookCallback/HookCallback.style.scss'\r\nimport { MemoElement } from '../HookCallback/MemoElement/MemoElement';\r\n\r\nexport default function HookMemo() {\r\n\r\n    const [refresh, setRefresh] = useState(true);\r\n    const [stateVal, setStateVal] = useState(5);\r\n    const [statePow, setStatePow] = useState(2);\r\n\r\n    useEffect(() => {\r\n        console.log(\"\\n\\n==== refresh MEMO\");\r\n    }, [refresh])\r\n\r\n    const fun = (val: number, pow: number) => (): number => {\r\n        return val ** pow;\r\n    }\r\n\r\n    const memoizedFun = useMemo(\r\n        () => fun(stateVal, statePow),\r\n        [stateVal, statePow]\r\n    );\r\n\r\n    return (\r\n        <div className='hook-callback'>\r\n            <p>Open browser console</p>\r\n            <label htmlFor='val'>val = </label>\r\n            <input id=\"val\" name=\"val\" type=\"number\" value={stateVal} onChange={(e) => setStateVal(Number(e.target.value))} />\r\n            <label htmlFor='pow'>pow = </label>\r\n            <input id=\"pow\" name=\"pow\" type=\"number\" value={statePow} onChange={(e) => setStatePow(Number(e.target.value))} />\r\n\r\n            <span>FUN = </span>\r\n            <FunElement function={fun(stateVal, statePow)} />\r\n\r\n            <span>MEMO = </span>\r\n            <MemoElement function={memoizedFun} />\r\n\r\n            <div>\r\n                <button onClick={() => setRefresh(prev => !prev)}>Refresh component</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","\r\nexport default function BtnAdd(props: { click: () => void }) {\r\n\r\n    const handleClick = () => {\r\n        props.click();\r\n    }\r\n\r\n    return (\r\n        <button onClick={handleClick}>Add element</button>\r\n    )\r\n}\r\n","import { useEffect, useReducer, useState } from 'react';\r\nimport BtnAdd from './BtnAdd/BtnAdd';\r\nimport './HookReducer.style.scss';\r\n\r\nexport default function HookReducer() {\r\n\r\n    const ADD = \"[useReducer] ADD\";\r\n    const REMOVE = \"[useReducer] REMOVE\";\r\n    type Action = {\r\n        type: string,\r\n        payload: number\r\n    };\r\n    const initState = [\r\n        1, 2, 3, 4\r\n    ];\r\n\r\n    const [stateNumber, setStateNumber] = useState(99);\r\n\r\n    useEffect(() => {\r\n        if (stateNumber > 99)\r\n            dispatch({ type: ADD, payload: stateNumber });\r\n    }, [stateNumber]);\r\n\r\n    const reducer = (state: typeof initState, action: Action) => {\r\n        switch (action.type) {\r\n            case ADD:\r\n                return [...state, action.payload];\r\n            case REMOVE:\r\n                return state.filter((el, id) => {\r\n                    if (id === action.payload) {\r\n                        return false;\r\n                    }\r\n                    return true;\r\n                })\r\n            default:\r\n                return state;\r\n        }\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(reducer, initState);\r\n\r\n    const handleAdd = () => {\r\n        setStateNumber(prev => {\r\n            return prev + 1;\r\n        })\r\n    }\r\n\r\n    const handleRemove = (id: number) => {\r\n        dispatch({ type: REMOVE, payload: id });\r\n    }\r\n\r\n    return (\r\n        <div className='hook-reducer'>\r\n            <div>\r\n                {state.map((el, id) => {\r\n                    return <span\r\n                        key={`[Reducer tab] = ${id}`}\r\n                    >\r\n                        {el}\r\n                        <button onClick={() => handleRemove(id)}>X</button>\r\n                    </span>\r\n                })}\r\n            </div>\r\n            <BtnAdd click={handleAdd} />\r\n        </div>\r\n    )\r\n}\r\n","import './HookState.style.scss';\r\nimport { ChangeEvent, Fragment, useState } from 'react'\r\n\r\nexport default function HookState() {\r\n\r\n    const [stateNumber, setStateNumber] = useState(0)\r\n    const [stateString, setStateString] = useState(\"\")\r\n    const [stateTab, setStateTab] = useState([\"El_1\", \"El_2\"])\r\n    const [stateObject, setStateObject] = useState({\r\n        country: \"Poland\",\r\n        city: \"Warsaw\"\r\n    })\r\n\r\n    const handleNumber = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const { value } = e.target;\r\n        setStateNumber(Number(value));\r\n    }\r\n\r\n    const handleString = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const { value } = e.target;\r\n        setStateString(value);\r\n    }\r\n\r\n    const handleTab = (index: number, value: string) => {\r\n        setStateTab(prev => {\r\n            const newTab = [...prev];\r\n            newTab[index] = value;\r\n            return newTab;\r\n        })\r\n    }\r\n\r\n    const handleObject = (name: string, value: string) => {\r\n        setStateObject(prev => {\r\n            return {\r\n                ...prev,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className='hook-state'>\r\n            <span>Number =</span>\r\n            <span>{stateNumber}</span>\r\n            <div>\r\n                <label htmlFor='stateNumber'>Number:</label>\r\n                <input id=\"stateNumber\" name=\"stateNumber\" type=\"number\" value={stateNumber} onChange={handleNumber}></input>\r\n            </div>\r\n\r\n            <span>String =</span>\r\n            <span>{stateString}</span>\r\n            <div>\r\n                <label htmlFor='stateString'>String:</label>\r\n                <input id=\"stateString\" name=\"stateString\" value={stateString} onChange={handleString}></input>\r\n            </div>\r\n\r\n            <span>Tab =</span>\r\n            <span>\r\n                {\r\n                    stateTab.map((el, index) => {\r\n                        return <Fragment key={`[State tab] = ${index}`}>\r\n                            <span>{`${index} = ${el}`}</span>\r\n                            <br />\r\n                        </Fragment>\r\n                    })\r\n                }\r\n            </span>\r\n            <div>\r\n                {\r\n                    stateTab.map((el, index) => {\r\n                        return <Fragment key={`[State tab form] = ${index}`}>\r\n                            <label htmlFor={`[TAB] ${index}`}>{index}=</label>\r\n                            <input\r\n                                id={`[TAB] ${index}`}\r\n                                name={`[TAB] ${index}`}\r\n                                value={el}\r\n                                onChange={(e) => handleTab(index, e.target.value)}\r\n                            ></input>\r\n                        </Fragment>\r\n                    })\r\n                }\r\n            </div>\r\n\r\n            <span>Object =</span>\r\n            <span>\r\n                {\r\n                    Object.entries(stateObject).map(el => {\r\n                        return <Fragment key={`[State object] = ${el[0]}`}>\r\n                            <span>{`${el[0]}: ${el[1]}`}</span>\r\n                            <br />\r\n                        </Fragment>;\r\n                    })\r\n                }\r\n            </span>\r\n            <div>\r\n                {\r\n                    Object.entries(stateObject).map((el) => {\r\n                        return <Fragment key={`[State object form] = ${el[0]}`}>\r\n                            <label htmlFor={el[0]}>{el[0]}=</label>\r\n                            <input\r\n                                id={el[0]}\r\n                                name={el[0]}\r\n                                value={el[1]}\r\n                                onChange={(e) => handleObject(el[0], e.target.value)}\r\n                            ></input>\r\n                        </Fragment>\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useState, useTransition } from 'react';\r\nimport './HookTransition.style.scss';\r\n\r\nexport default function HookTransition() {\r\n\r\n    const [value, setValue] = useState(2);\r\n    const [tab, setTab] = useState([1, 1, 2]);\r\n\r\n    const [isPending, startTransition] = useTransition();\r\n\r\n    const setTabTransition = () => {\r\n        startTransition(() => {\r\n            setTab(prev => {\r\n                const newTab = [...prev];\r\n                const length = newTab.length;\r\n                newTab.push(newTab[length - 2] + newTab[length - 1]);\r\n                return newTab;\r\n            });\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (value > 2)\r\n            setTabTransition();\r\n    }, [value])\r\n\r\n    const handleClick = () => {\r\n        setValue(prev => prev + 1);\r\n    }\r\n\r\n    return (\r\n        <div className='hook-transition'>\r\n            {\r\n                isPending ?\r\n                    <p className='wait'>Wait ... </p>\r\n                    :\r\n                    <div className='tab-container'>\r\n                        {\r\n                            tab.map((el, index) => {\r\n                                return <span key={`[tab tran] id = ${index}`}>Element = {el}</span>\r\n                            })\r\n                        }\r\n                    </div>\r\n            }\r\n\r\n            <div className='tab-container'>\r\n                <span>Tab elements = {value}</span>\r\n                <button onClick={handleClick}>Add new tab value</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import Context from '../reactAdvance/Context/Context';\r\nimport Reference from '../reactAdvance/Reference/Reference';\r\nimport Lifecycle from '../reactBasic/Lifecycle/Lifecycle';\r\nimport HookCallback from './HookCallback/HookCallback';\r\nimport HookCustom from './HookCustom/HookCustom';\r\nimport HookMemo from './HookMemo/HookMemo';\r\nimport HookReducer from './HookReducer/HookReducer';\r\nimport HookState from './HookState/HookState';\r\nimport HookTransition from './HookTransition/HookTransition';\r\nimport './ReactHooks.style.scss';\r\n\r\nexport default function ReactHooks() {\r\n    return (\r\n        <div className='react-hooks'>\r\n            <h1>React hooks</h1>\r\n            <div className='minor'>\r\n                <h2>useState</h2>\r\n                <HookState />\r\n            </div>\r\n\r\n            <div className='minor'>\r\n                <h2>useEffect</h2>\r\n                <Lifecycle />\r\n            </div>\r\n\r\n            <div className='minor'>\r\n                <h2>useContext</h2>\r\n                <Context />\r\n            </div>\r\n\r\n            <div className='minor'>\r\n                <h2>useReducer</h2>\r\n                <HookReducer />\r\n            </div>\r\n\r\n            <div className='minor'>\r\n                <h2>useCallback</h2>\r\n                <HookCallback />\r\n            </div>\r\n\r\n            <div className='minor'>\r\n                <h2>useMemo</h2>\r\n                <HookMemo />\r\n            </div>\r\n\r\n            <div className='minor'>\r\n                <h2>useRef</h2>\r\n                <Reference />\r\n            </div>\r\n\r\n            <div className='minor'>\r\n                <h2>Transition</h2>\r\n                <HookTransition />\r\n            </div>\r\n\r\n            <div className='minor'>\r\n                <h2>Custom hook</h2>\r\n                <HookCustom />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["initContext","value","setValue","MyContext","createContext","ContextChild","useContext","Fragment","htmlFor","id","name","onChange","e","target","LIGHT","ThemeContext","ContextTheme","theme","className","Context","useState","stateContext","setStateContext","stateContextTheme","setStateContextTheme","Provider","val","onClick","forwardRef","props","ref","state","setState","placeholder","prev","disabled","Reference","spanRef","useRef","createRef","handleClick","color","current","style","backgroundColor","querySelector","focus","button","click","Destroy","setParentState","useEffect","Lifecycle","initState","setInitState","changeState","setChangeState","changeStateNumber","setChangeStateNumber","destroy","setDestroy","destroyState","setDestroyState","FunElement","memo","console","log","function","MemoElement","HookCallback","refresh","setRefresh","setVal","pow","setPow","fun","memoizedFun","useCallback","type","Number","text","data","setData","timeout","setTimeout","clearTimeout","HookCustom","useCustom","HookMemo","stateVal","setStateVal","statePow","setStatePow","useMemo","BtnAdd","HookReducer","ADD","REMOVE","stateNumber","setStateNumber","dispatch","payload","useReducer","action","filter","el","map","handleRemove","HookState","stateString","setStateString","stateTab","setStateTab","country","city","stateObject","setStateObject","index","newTab","handleTab","Object","entries","HookTransition","tab","setTab","useTransition","isPending","startTransition","length","push","ReactHooks","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}