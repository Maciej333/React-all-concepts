{"version":3,"file":"static/js/118.9f9f176b.chunk.js","mappings":"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","sources":["features/reactAdvance/Context/myContext.ts","features/reactAdvance/Context/ContextChild/ContextChild.tsx","features/reactAdvance/Context/themeContext.ts","features/reactAdvance/Context/ContextTheme/ContextTheme.tsx","features/reactAdvance/Context/Context.tsx","features/reactAdvance/CodeSplit/Element/Element.tsx","features/reactAdvance/CodeSplit/CodeSplit.tsx","features/reactAdvance/Fragment/Fragment.tsx","features/reactAdvance/HigherOrder/WrapMe/WrapMe.tsx","features/reactAdvance/HigherOrder/withCurrency.tsx","features/reactAdvance/HigherOrder/HigherOrder.tsx","features/reactAdvance/IntervalAndTimeout/IntervalAndTimeout.tsx","features/reactAdvance/MemoElement/Memo/Memo.tsx","features/reactAdvance/MemoElement/NoMemo/NoMemo.tsx","features/reactAdvance/MemoElement/MemoElement.tsx","features/reactAdvance/ReactAdvance.tsx","features/reactAdvance/Reference/ReferenceForward/ReferenceForward.tsx","features/reactAdvance/Reference/Reference.tsx"],"sourcesContent":["import { createContext } from \"react\";\r\nimport { IMyContext } from \"../../../core/models/MyContext\";\r\n\r\nconst initContext: IMyContext = {\r\n    value: \"val from context\",\r\n    setValue: () => \"\"\r\n}\r\n\r\nexport const MyContext = createContext(initContext);","import { Fragment, useContext } from \"react\"\r\nimport { MyContext } from \"../myContext\"\r\n\r\nexport default function ContextChild() {\r\n\r\n    const { value, setValue } = useContext(MyContext);\r\n\r\n    return (\r\n        <Fragment>\r\n            <span>[CHILD] stateContext = {value}</span>\r\n            <label htmlFor=\"childContext\">Change context from child component:</label>\r\n            <input id=\"childContext\" name=\"childContext\" value={value} onChange={(e) => { setValue(e.target.value) }}></input>\r\n        </Fragment>\r\n    )\r\n}\r\n","import { createContext } from \"react\";\r\n\r\nexport const LIGHT = \"light\";\r\nexport const DARK = \"dark\";\r\n\r\nexport const ThemeContext = createContext(LIGHT)","import { useContext } from 'react';\r\nimport { ThemeContext } from '../themeContext';\r\nimport './ContextTheme.style.scss';\r\n\r\nexport default function ContextTheme() {\r\n\r\n    const theme = useContext(ThemeContext);\r\n\r\n    return (\r\n        <div className={\"context-theme \"+theme}>ContextTheme</div>\r\n    )\r\n}\r\n","import { ChangeEvent, useState } from 'react';\r\nimport './Context.style.scss';\r\nimport ContextChild from './ContextChild/ContextChild';\r\nimport ContextTheme from './ContextTheme/ContextTheme';\r\nimport { MyContext } from './myContext';\r\nimport { DARK, LIGHT, ThemeContext } from './themeContext';\r\n\r\nexport default function Context() {\r\n\r\n    const [stateContext, setStateContext] = useState(\"context val from state\");\r\n    const [stateContextTheme, setStateContextTheme] = useState(LIGHT);\r\n\r\n    const handleStateContext = (val: string) => {\r\n        setStateContext(val);\r\n    }\r\n\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const { value } = e.target;\r\n        setStateContext(value);\r\n    }\r\n\r\n    return (\r\n        <div className='context'>\r\n            <MyContext.Provider value={{ value: stateContext, setValue: handleStateContext }}>\r\n                <span>[PARENT] stateContext = {stateContext}</span>\r\n                <label htmlFor='parentContext'>Change context from parent component:</label>\r\n                <input id=\"parentContext\" name=\"parentContext\" value={stateContext} onChange={handleChange}></input>\r\n\r\n                <ContextChild />\r\n            </MyContext.Provider>\r\n            <ThemeContext.Provider value={stateContextTheme}>\r\n                <p>EXAMPLE OF THEME CONTEXT</p>\r\n                <label htmlFor='themeContext'>Theme = {stateContextTheme}</label>\r\n                <div>\r\n                    <button onClick={() => setStateContextTheme(LIGHT)}>Light theme</button>\r\n                    <button onClick={() => setStateContextTheme(DARK)}>Dark theme</button>\r\n                </div>\r\n                <ContextTheme />\r\n            </ThemeContext.Provider>\r\n        </div >\r\n    )\r\n}\r\n","export default function Element() {\r\n    return (\r\n        <div>Element</div>\r\n    )\r\n}\r\n","import { lazy, Suspense } from 'react';\r\nimport './CodeSplit.style.scss';\r\nimport Element from './Element/Element';\r\n\r\nconst ElementLazy = lazy(() => import('./ElementLazy/ElementLazy'));\r\n\r\nexport default function CodeSplit() {\r\n    return (\r\n        <div className='code-split'>\r\n            <p>Element with normal loading</p>\r\n            <Element />\r\n\r\n            <p>Element with lazy loading [ change network speed 'good 2D' ]</p>\r\n            <Suspense fallback={<span>...loading</span>}>\r\n                <ElementLazy />\r\n            </Suspense>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport './Fragment.style.scss';\r\n\r\nexport default function Fragment() {\r\n\r\n    const [stateTab] = useState([\"EL_1\", \"EL_2\", \"EL_3\"])\r\n\r\n    return (\r\n        <div className='fragment'>\r\n            <p>Tab element </p>\r\n            {\r\n                stateTab.map(element => {\r\n                    return <React.Fragment key={element}>\r\n                        <span>Tab el = </span>\r\n                        <span>{element}</span>\r\n                    </React.Fragment>\r\n                })\r\n            }\r\n\r\n            <p>Fragment children</p>\r\n            <>\r\n                <span>Element 1 in fragment</span>\r\n                <span>Element 2 in fragment</span>\r\n            </>\r\n\r\n            <p>Div children</p>\r\n            <div>\r\n                <span>Element 1 in div</span>\r\n                <span>Element 2 in div</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { withCurrency } from '../withCurrency';\r\nimport './WrapMe.style.scss';\r\n\r\nconst WrapMeComponent = (props: { money: string, error?: boolean }) => {\r\n    const { money, error = false } = props;\r\n    return (\r\n        <div className='wrap-me'>\r\n            {\r\n                error ?\r\n                    <span>[Error] Invalid money</span>\r\n                    :\r\n                    <>\r\n                        <span>Value </span>\r\n                        <span>{money}</span>\r\n                    </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst WrapMe = withCurrency(WrapMeComponent, \"PLN\");\r\nexport default WrapMe;","import React, { useEffect, useState } from \"react\";\r\n\r\ninterface PropCurrency {\r\n    money: string;\r\n}\r\n\r\nexport function withCurrency<T extends PropCurrency>(Component: React.ComponentType<T>, currency: string) {\r\n\r\n    const NewComponent = (props: T) => {\r\n        const { money } = props;\r\n\r\n        const [newMoney, setNewMoney] = useState(money);\r\n        const [error, setError] = useState(false);\r\n\r\n        useEffect(() => {\r\n            if (money.match(/^[\\d]+([.,]?[\\d]+)?$/)) {\r\n                const moneyTab = money.split(/[,.]/);\r\n                let newCurrency = \"\";\r\n                if (moneyTab.length > 1) {\r\n                    newCurrency += `${parseFloat(money).toFixed(2)} ${currency} `\r\n                } else {\r\n                    newCurrency += `${Number(moneyTab[0])}.00 ${currency} `\r\n                }\r\n                setNewMoney(newCurrency);\r\n                setError(false);\r\n            } else {\r\n                setError(true);\r\n            }\r\n        }, [money])\r\n\r\n        return <Component {...(props as T)} money={newMoney} error={error} />;\r\n    };\r\n\r\n    return NewComponent;\r\n}","import { ChangeEvent, useState } from 'react';\r\nimport './HigherOrder.style.scss';\r\nimport WrapMe from './WrapMe/WrapMe';\r\n\r\nexport default function HigherOrder() {\r\n    const [state, setState] = useState(\"220.2345\");\r\n\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const { value } = e.target;\r\n        setState(value);\r\n    }\r\n\r\n    return (\r\n        <div className='higher-order'>\r\n            <label htmlFor='money'>State money = </label>\r\n            <input id=\"money\" name=\"money\" value={state} onChange={handleChange}></input>\r\n            <div>\r\n                <WrapMe money={state} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport './IntervalAndTimeout.style.scss';\r\n\r\nexport default function IntervalAndTimeout() {\r\n\r\n    const [reset, setReset] = useState(false);\r\n    const [stateInterval, setStateInterval] = useState(0);\r\n    const [stateTimeout, setStateTimeout] = useState(\"\");\r\n    const [intervalId, setIntervalId] = useState<number>(-1);\r\n    const [timeoutId, setTimeoutId] = useState<number>(-1);\r\n\r\n    const handleStartInterval = () => {\r\n        setIntervalId(window.setInterval(funInterval, 1000));\r\n    }\r\n\r\n    const handleStartTimeout = () => {\r\n        setStateTimeout(\"\");\r\n        setTimeoutId(window.setTimeout(funTimeout, 5000));\r\n    }\r\n\r\n    const funInterval = () => {\r\n        console.log(\"[IntervalAndTimeout] funInterval\")\r\n        setStateInterval(prev => prev + 1);\r\n    }\r\n\r\n    const funTimeout = () => {\r\n        console.log(\"[IntervalAndTimeout] funTimeout\")\r\n        setStateTimeout(\"Return value from timeout!!!\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            clearInterval(intervalId);\r\n        }\r\n    }, [intervalId])\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            clearTimeout(timeoutId);\r\n        }\r\n    }, [timeoutId])\r\n\r\n    useEffect(() => {\r\n        setStateInterval(0);\r\n        setStateTimeout(\"\");\r\n    }, [reset])\r\n\r\n    return (\r\n        <div className='interval-timeout'>\r\n            <p>Open browser console, start timeout and interval and change page [no memory leak]</p>\r\n            <p>Interval [every 1s will add 1 to nr]</p>\r\n            <div>\r\n                <span>Nr of interval:</span>\r\n                <span>{stateInterval}</span>\r\n                <button onClick={handleStartInterval}>Start interval</button>\r\n                <button onClick={() => clearInterval(intervalId)}>Stop interval</button>\r\n            </div>\r\n\r\n            <p>Timeout [after 5s will render new timeout state]</p>\r\n            <div>\r\n                <span>Timeout state:</span>\r\n                <span>{stateTimeout ? stateTimeout : \"...click start\"}</span>\r\n                <button onClick={handleStartTimeout}>Start timeout</button>\r\n                <button onClick={() => clearTimeout(timeoutId)}>Stop timeout</button>\r\n            </div>\r\n\r\n            <button onClick={() => setReset(prev => !prev)}>Reset</button>\r\n        </div >\r\n    )\r\n}\r\n","import { memo } from \"react\";\r\n\r\nconst MemoComponent = (props: { data: string }) => {\r\n\r\n    console.log(\"-- Memo \");\r\n    const { data } = props;\r\n\r\n    return (\r\n        <div className=\"memo-container\">\r\n            <p>Memo</p>\r\n            <span>{data}</span>\r\n        </div>\r\n    )\r\n}\r\nexport const Memo = memo(MemoComponent);","export const NoMemo = (props: { data: string }) => {\r\n\r\n    console.log(\"-- No memo \");\r\n    const { data } = props;\r\n\r\n    return (\r\n        <div className=\"memo-container\">\r\n            <p>No Memo</p>\r\n            <span>{data}</span>\r\n        </div>\r\n    )\r\n}","import { useState } from 'react';\r\nimport { Memo } from './Memo/Memo';\r\nimport './MemoElement.style.scss';\r\nimport { NoMemo } from './NoMemo/NoMemo';\r\n\r\nexport default function MemoElement() {\r\n\r\n    const [refreshParent, setRefreshParent] = useState(true);\r\n    const [stateMemo, setStateMemo] = useState(\"memo data\");\r\n    const [stateNoMemo, setStateNoMemo] = useState(\"no memo data\");\r\n\r\n    return (\r\n        <>\r\n            <p>Open browser console, and change datas to see rendering difference</p>\r\n            <div className='grid'>\r\n                <button onClick={() => setRefreshParent(true)}>Parent show</button>\r\n                <button onClick={() => setRefreshParent(false)}>Parent hide</button>\r\n\r\n                <label htmlFor='memo-data'>Memo data:</label>\r\n                <input id=\"memo-data\" name=\"memo-data\" value={stateMemo} onChange={(e) => setStateMemo(e.target.value)}></input>\r\n\r\n                <label htmlFor='no-memo-data'>No memo data:</label>\r\n                <input id=\"no-memo-data\" name=\"no-memo-data\" value={stateNoMemo} onChange={(e) => setStateNoMemo(e.target.value)}></input>\r\n            </div>\r\n            <div className='memo-element'>\r\n                {\r\n                    refreshParent ?\r\n                        <>\r\n                            <div>\r\n                                <Memo data={stateMemo} />\r\n                            </div>\r\n                            <div>\r\n                                <NoMemo data={stateNoMemo} />\r\n                            </div>\r\n                        </>\r\n                        :\r\n                        null\r\n                }\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n","import CodeSplit from './CodeSplit/CodeSplit';\r\nimport Context from './Context/Context';\r\nimport Fragment from './Fragment/Fragment';\r\nimport HigherOrder from './HigherOrder/HigherOrder';\r\nimport IntervalAndTimeout from './IntervalAndTimeout/IntervalAndTimeout';\r\nimport MemoElement from './MemoElement/MemoElement';\r\nimport './ReactAdvance.style.scss';\r\nimport Reference from './Reference/Reference';\r\n\r\nexport default function ReactAdvance() {\r\n    return (\r\n        <div className='react-advance'>\r\n            <h1>React Advance</h1>\r\n            <div className='minor'>\r\n                <h2>Code spliting [ Lazy ]</h2>\r\n                <CodeSplit />\r\n            </div>\r\n\r\n            <div className='minor'>\r\n                <h2>Context</h2>\r\n                <Context />\r\n            </div>\r\n\r\n            <div className='minor'>\r\n                <h2>Fragment</h2>\r\n                <Fragment />\r\n            </div>\r\n\r\n            <div className='minor'>\r\n                <h2>Reference</h2>\r\n                <Reference />\r\n            </div>\r\n\r\n            <div className='minor'>\r\n                <h2>Higher order components</h2>\r\n                <HigherOrder />\r\n            </div>\r\n\r\n            <div className='minor'>\r\n                <h2>Memo</h2>\r\n                <MemoElement />\r\n            </div>\r\n\r\n            <div className='minor'>\r\n                <h2>Interval, Timer</h2>\r\n                <IntervalAndTimeout />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import './ReferenceForward.style.scss';\r\nimport React, { forwardRef, useState } from 'react';\r\n\r\nconst ReferenceForward = forwardRef<HTMLDivElement>((props, ref) => {\r\n    const [state, setState] = useState(\"no click\");\r\n\r\n    const handleClick = () => {\r\n        setState(prev => {\r\n            const returnVal = prev === \"no click\" ?\r\n                \"YES, U clicked ME!\"\r\n                :\r\n                \"no click\";\r\n            return returnVal;\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className='reference-focus' ref={ref}>\r\n            <span>Input to focus</span>\r\n            <input placeholder='Focus Me!'></input>\r\n            <span>Forward state = '{state}'</span>\r\n            <span className=\"btn-wrapper\" onClick={handleClick}>\r\n                <button onClick={() => { }} disabled>Force me to click!</button>\r\n            </span>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default ReferenceForward;","import { createRef, useRef } from 'react';\r\nimport './Reference.style.scss';\r\nimport ReferenceForward from './ReferenceForward/ReferenceForward';\r\n\r\nexport default function Reference() {\r\n\r\n    const spanRef = useRef<HTMLSpanElement>(null);\r\n    const forwardRef = createRef<HTMLDivElement>();\r\n\r\n    const handleClick = (color: string) => {\r\n        if (spanRef.current?.style)\r\n            spanRef.current.style.backgroundColor = color;\r\n    }\r\n\r\n    const handleForwardFocus = () => {\r\n        forwardRef.current?.querySelector(\"input\")?.focus();\r\n    }\r\n\r\n    const handleForwardClick = () => {\r\n        const button = forwardRef.current?.querySelector(\"button\");\r\n        if (button) {\r\n            button.disabled = false;\r\n            button.click();\r\n            button.disabled = true;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='reference'>\r\n            <p>[ useRef ] Click button to change span 'Change me' background color</p>\r\n            <span ref={spanRef}>Change me!</span>\r\n            <div className='flex'>\r\n                <button onClick={() => handleClick('red')}>Change to red</button>\r\n                <button onClick={() => handleClick('transparent')}>Change to basic</button>\r\n            </div>\r\n\r\n            <p>[ createRef ] referance forwarding </p>\r\n            <div className='flex'>\r\n                <button onClick={handleForwardFocus}>Focus input</button>\r\n                <button onClick={handleForwardClick}>Click btn</button>\r\n            </div>\r\n            <ReferenceForward ref={forwardRef} />\r\n        </div>\r\n    )\r\n}\r\n"],"names":["initContext","value","setValue","MyContext","createContext","ContextChild","useContext","Fragment","htmlFor","id","name","onChange","e","target","LIGHT","ThemeContext","ContextTheme","theme","className","Context","useState","stateContext","setStateContext","stateContextTheme","setStateContextTheme","Provider","val","onClick","Element","ElementLazy","lazy","CodeSplit","Suspense","fallback","stateTab","map","element","Component","currency","props","money","error","newMoney","setNewMoney","setError","useEffect","match","moneyTab","split","newCurrency","length","parseFloat","toFixed","Number","HigherOrder","state","setState","IntervalAndTimeout","reset","setReset","stateInterval","setStateInterval","stateTimeout","setStateTimeout","intervalId","setIntervalId","timeoutId","setTimeoutId","funInterval","console","log","prev","funTimeout","clearInterval","clearTimeout","window","setInterval","setTimeout","MemoComponent","data","Memo","memo","NoMemo","MemoElement","refreshParent","setRefreshParent","stateMemo","setStateMemo","stateNoMemo","setStateNoMemo","ReactAdvance","Reference","forwardRef","ref","placeholder","disabled","spanRef","useRef","createRef","handleClick","color","current","style","backgroundColor","querySelector","focus","button","click"],"sourceRoot":""}