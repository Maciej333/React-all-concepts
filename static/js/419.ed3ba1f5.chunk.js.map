{"version":3,"file":"static/js/419.ed3ba1f5.chunk.js","mappings":"2NASe,SAASA,EAAeC,GAEnC,IAAQC,EAAuBD,EAAvBC,SAAUC,EAAaF,EAAbE,SAEZC,GAAWC,EAAAA,EAAAA,MACXC,GAAOC,EAAAA,EAAAA,KAAe,SAAAC,GAAK,OAAIA,EAAMC,QACvCC,GAAS,EAQb,OANAJ,EAAKK,SAASC,KAAKC,SAAQ,SAAAD,GACnBT,EAASW,SAASC,OAAOH,MACzBF,GAAS,MAIZJ,EAAKU,SAAYN,EAIfR,GAHI,SAAC,KAAD,CAAUe,GAAG,gBAAgBT,MAAO,CAAEU,KAAMd,EAASe,SAAUP,KAAMT,GAAYiB,SAAO,I,wBCtBxF,SAASC,IACpB,OACI,+BACI,iBAAKC,UAAU,QAAf,WACI,mCACA,iBAAMC,MAAO,CAAE,OAAU,OAAQ,SAAY,UAA7C,4GCAhB,IAAMC,GAAcC,EAAAA,EAAAA,OAAK,kBAAM,gCAEhB,SAASC,IACpB,OACI,SAAC,KAAD,WACI,UAAC,KAAD,CAAOC,KAAK,GAAGC,SAAS,SAAC,KAAD,IAAxB,WACI,SAAC,KAAD,CAAOD,KAAK,IAAIC,SAAS,iDACzB,UAAC,KAAD,CAAOD,KAAK,WAAWC,SAAS,SAAC,EAAAC,SAAD,CAAUC,UAAU,sCAApB,UAAuC,SAACN,EAAD,MAAvE,WACI,SAAC,KAAD,CAAOG,KAAK,mBAAmBC,SAAS,SAAC,IAAD,OACxC,SAAC,KAAD,CAAOD,KAAK,aAAaC,SAAS,SAAC,IAAD,OAClC,SAAC,KAAD,CAAOD,KAAK,SAASC,SAAS,SAAC,IAAD,UAElC,SAAC,KAAD,CACID,KAAK,aACLC,SACI,SAAC5B,EAAD,CAAgBG,SAAU,CAAC4B,EAAAA,EAAAA,MAA3B,UACI,SAACV,EAAD,SAIZ,SAAC,KAAD,CAAOM,KAAK,IAAIC,SAAS,iD,cCxB1B,SAASI,IACpB,OACI,gBAAKV,UAAU,aAAf,UACI,iBAAKA,UAAU,iBAAf,WACI,SAAC,KAAD,CAASL,GAAG,gBAAZ,oBACA,SAAC,KAAD,CAASA,GAAG,oBAAZ,iCACA,SAAC,KAAD,CAASA,GAAG,gBAAZ,wBCJD,SAASgB,IACpB,OACI,iBAAKX,UAAU,eAAf,WACI,0CACA,SAACU,EAAD,KACA,SAACN,EAAD,KACA,SAAC,KAAD,S,6GCHCQ,EAAS,WAElB,IAAM9B,GAAWC,EAAAA,EAAAA,MACX8B,GAAQC,EAAAA,EAAAA,MAEd,OACI,iBAAKd,UAAU,SAAf,WACI,4BACI,SAAC,KAAD,CAAML,GAAG,SAAT,wBACA,SAAC,KAAD,CAAMA,GAAG,WAAT,4BACA,SAAC,KAAD,CAAMA,GAAG,mBAAT,mCAGJ,yCACA,0BAAOb,EAASe,YAEhB,uCACA,iBAAKG,UAAU,aAAf,WACI,mCACA,0BAAY,OAALa,QAAK,IAALA,GAAAA,EAAOE,GAAKF,EAAME,GAAK,iBAC9B,qCACA,0BAAY,OAALF,QAAK,IAALA,GAAAA,EAAOG,KAAOH,EAAMG,KAAO,sBAEtC,SAAC,KAAD,QAKG,SAASC,IACpB,IAAMJ,GAAQC,EAAAA,EAAAA,MAEd,OACI,0BACI,0BAAY,OAALD,QAAK,IAALA,GAAAA,EAAOE,GAAKF,EAAME,GAAK,gBAC7B,OACD,0BAAY,OAALF,QAAK,IAALA,GAAAA,EAAOG,KAAOH,EAAMG,KAAO","sources":["core/routes/ProtectedRoute.tsx","features/reactRouter/RouterProtected/RouterProtected.tsx","features/reactRouter/routes/ReactRouterRoutes.tsx","features/reactRouter/RouterNav/RouterNav.tsx","features/reactRouter/ReactRouter.tsx","features/reactRouter/RouterBasic/Params/Params.tsx"],"sourcesContent":["import { Navigate, useLocation } from \"react-router-dom\";\r\nimport { useAppSelector } from \"../hooks/store.hooks\";\r\nimport { UserRoles } from \"../utils/userRoles.enum\";\r\n\r\nexport type ProtectedRouteLocationState = {\r\n    from: string,\r\n    role: UserRoles[]\r\n}\r\n\r\nexport default function ProtectedRoute(props: { children: JSX.Element, authRole: UserRoles[] }) {\r\n\r\n    const { children, authRole } = props;\r\n\r\n    const location = useLocation();\r\n    const auth = useAppSelector(state => state.user);\r\n    let isRole = false;\r\n\r\n    auth.userData.role.forEach(role => {\r\n        if (authRole.includes(Number(role)))\r\n            isRole = true;\r\n    })\r\n\r\n\r\n    if (!auth.isLogin || !isRole) {\r\n        return <Navigate to=\"/authenticate\" state={{ from: location.pathname, role: authRole }} replace />;\r\n    }\r\n\r\n    return children;\r\n}\r\n","import React from 'react'\r\n\r\nexport default function RouterProtected() {\r\n    return (\r\n        <>\r\n            <div className='minor'>\r\n                <h2>Paths</h2>\r\n                <span style={{ \"margin\": \"50px\", \"fontSize\": \"1.2rem\" }}>CONGRATULATION U are here, where AUTH role was required!. Try refreshing page, or logout.</span>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { lazy, Suspense } from 'react';\r\nimport { Routes, Route, Outlet } from 'react-router-dom';\r\nimport ProtectedRoute from '../../../core/routes/ProtectedRoute';\r\nimport { UserRoles } from '../../../core/utils/userRoles.enum';\r\nimport NestedParams from '../RouterBasic/Params/Params';\r\nimport RouterProtected from '../RouterProtected/RouterProtected';\r\n\r\nconst RouterBasic = lazy(() => import('../RouterBasic/RouterBasic'));\r\n\r\nexport default function ReactRouterRoutes() {\r\n    return (\r\n        <Routes>\r\n            <Route path=\"\" element={<Outlet />}>\r\n                <Route path=\"/\" element={<p>Select nested path</p>} />\r\n                <Route path=\"/basic/*\" element={<Suspense fallback={<p>Loading...</p>}><RouterBasic /></Suspense>}>\r\n                    <Route path=\"params/:id/:name\" element={<NestedParams />}></Route>\r\n                    <Route path=\"params/:id\" element={<NestedParams />}></Route>\r\n                    <Route path=\"params\" element={<NestedParams />}></Route>\r\n                </Route>\r\n                <Route\r\n                    path=\"/protected\"\r\n                    element={\r\n                        <ProtectedRoute authRole={[UserRoles.AUTH]}>\r\n                            <RouterProtected />\r\n                        </ProtectedRoute>\r\n                    }\r\n                />\r\n                <Route path=\"*\" element={<p>Path not found</p>} />\r\n            </Route>\r\n        </Routes>\r\n    )\r\n}\r\n","import './RouterNav.style.scss';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nexport default function RouterNav() {\r\n    return (\r\n        <nav className='router-nav'>\r\n            <div className='link-container'>\r\n                <NavLink to=\"/router/basic\">Basic</NavLink>\r\n                <NavLink to=\"/router/protected\">Protected [ Auth ]</NavLink>\r\n                <NavLink to=\"/router/error\">Error</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n","import './ReactRouter.style.scss';\r\nimport ReactRouterRoutes from './routes/ReactRouterRoutes';\r\nimport { Outlet } from 'react-router-dom';\r\nimport RouterNav from './RouterNav/RouterNav';\r\n\r\nexport default function ReactRouter() {\r\n    return (\r\n        <div className='react-router'>\r\n            <h1>React Router</h1>\r\n            <RouterNav />\r\n            <ReactRouterRoutes />\r\n            <Outlet />\r\n        </div>\r\n    )\r\n}\r\n","import './Params.style.scss';\r\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\r\n\r\ninterface Param {\r\n    id?: number,\r\n    name?: string\r\n}\r\n\r\nexport const Params = () => {\r\n\r\n    const location = useLocation();\r\n    const param = useParams() as Param;\r\n\r\n    return (\r\n        <div className='params'>\r\n            <nav>\r\n                <Link to=\"params\">No params</Link>\r\n                <Link to=\"params/1\">Only id param</Link>\r\n                <Link to=\"params/1/Bozenka\">Id and Name param</Link>\r\n            </nav>\r\n\r\n            <span>Pathname:</span>\r\n            <span>{location.pathname}</span>\r\n\r\n            <span>Params:</span>\r\n            <div className='div-grid-2'>\r\n                <span>Id:</span>\r\n                <span>{param?.id ? param.id : \"no id given\"}</span>\r\n                <span>Name:</span>\r\n                <span>{param?.name ? param.name : \"no name given\"}</span>\r\n            </div>\r\n            <Outlet />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default function NestedParams() {\r\n    const param = useParams() as Param;\r\n\r\n    return (\r\n        <p>\r\n            <span>{param?.id ? param.id : \"no id given\"}</span>\r\n            {\" | \"}\r\n            <span>{param?.name ? param.name : \"no name given\"}</span>\r\n        </p>\r\n    )\r\n}\r\n"],"names":["ProtectedRoute","props","children","authRole","location","useLocation","auth","useAppSelector","state","user","isRole","userData","role","forEach","includes","Number","isLogin","to","from","pathname","replace","RouterProtected","className","style","RouterBasic","lazy","ReactRouterRoutes","path","element","Suspense","fallback","UserRoles","RouterNav","ReactRouter","Params","param","useParams","id","name","NestedParams"],"sourceRoot":""}